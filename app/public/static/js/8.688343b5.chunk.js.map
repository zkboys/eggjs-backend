{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../delegated 2887 from dll-reference reactVendor_b6b7128cced73957afbe","components/batch-delete-confirm/index.jsx","pages/users/useApi.js","pages/users/EditModalHooks.jsx","pages/users/UserListHooks.jsx"],"names":["module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","__webpack_require__","batchDeleteConfirm","count","content","style","padding","color","fontSize","confirm","title","icon","okType","onOk","onCancel","ajax","successTip","errorTip","config","modal","props","isEdit","useState","data","setData","id","useForm","form","useGet","loading","fetchUser","usePost","saving","saveUser","usePut","updating","updateUser","a","console","log","res","setFieldsValue","values","ajaxMethod","useEffect","fetchData","formProps","labelWidth","modalLoading","okText","cancelText","submit","resetFields","onFinish","initialValues","type","name","label","required","noSpace","options","mode","showSearch","optionFilterProp","path","condition","pageSize","pageNum","setCondition","dataSource","setDataSource","selectedRowKeys","setSelectedRowKeys","total","setTotal","visible","setVisible","setId","fetchUsers","api","deleting","deleteUsers","useDel","deletingOne","deleteUser","columns","dataIndex","width","render","record","items","onClick","onConfirm","handleDelete","handleSearch","params","list","length","ids","pageLoading","disabledDelete","layout","htmlType","danger","disabled","rowSelection","onChange","rowKey","serialNumber","onPageNumChange","onPageSizeChange"],"mappings":"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","file":"static/js/8.688343b5.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","module.exports = (__webpack_require__(6))(2887);","import React from 'react';\nimport {Modal} from 'antd';\nimport {ExclamationCircleOutlined} from '@ant-design/icons';\n\nexport default function batchDeleteConfirm(count) {\n    const content = (\n        <div>\n            您确定删除\n            <span style={{padding: '0 5px', color: 'red', fontSize: 18}}>\n                {count}\n            </span>\n            条记录吗？\n        </div>\n    );\n    return new Promise((resolve, reject) => {\n        Modal.confirm({\n            title: '温馨提示',\n            content,\n            icon: <ExclamationCircleOutlined/>,\n            okType: 'danger',\n            onOk: () => resolve(true),\n            onCancel: () => reject('user cancel confirm'),\n        });\n    });\n}\n","import * as ajax from 'src/commons/ajax';\n\n/*\n* TODO\n* 三种写法：字符串、对象、函数\n*   最终都会转化为函数\n*\n* 简化写法：\n* 方法命名，推导出 http method :\n*   getXxx -> get\n*   deleteXxx -> del\n*   saveXxx -> post\n*   updateXxx -> put\n*\n{\n    getUser: '/users',\n    deleteUser: '/users/:id',\n    saveUser: '/users',\n    updateUser: '/users',\n\n    login: {\n        method: 'post', // 默认get\n        url: '/login',\n        options: {successTip: '登录成功'},\n    }\n}\n*\n* 基于 swagger 生成 api sdk\n*\n* api提供hooks版本，和 基础 promise版本\n* getUser: (hook = true) => hook ? useGet(...) : (params, options) => ajax.get('/users', params, options)\n* */\n\nexport default {\n    getUser: () => ajax.useGet('/mock/users'),\n    deleteUser: () => ajax.useDel('/mock/users/:id', {successTip: '删除成功！', errorTip: '删除失败！'}),\n    deleteUsers: () => ajax.useDel('/mock/users', {successTip: '删除成功！', errorTip: '删除失败！'}),\n};\n","import React, {useState, useEffect} from 'react';\nimport {Form} from 'antd';\nimport {FormElement} from 'src/library/components';\nimport config from 'src/commons/config-hoc';\nimport {ModalContent} from 'src/library/components';\nimport {useGet, usePost, usePut} from 'src/commons/ajax';\n\nexport default config({\n    modal: props => props.isEdit ? '修改用户' : '添加用户',\n})(props => {\n    const [data, setData] = useState({});\n    const {isEdit, id, onOk} = props;\n    const [form] = Form.useForm();\n    const [loading, fetchUser] = useGet('/mock/users/:id');\n    const [saving, saveUser] = usePost('/mock/users', {successTip: '添加成功！'});\n    const [updating, updateUser] = usePut('/mock/users', {successTip: '添加成功！'});\n\n    async function fetchData() {\n        if (loading) return;\n        console.log(id);\n\n        const res = await fetchUser(id);\n\n        setData(res || {});\n        form.setFieldsValue(res || {});\n    }\n\n    async function handleSubmit(values) {\n        if (saving || updating) return;\n\n        const ajaxMethod = isEdit ? updateUser : saveUser;\n        await ajaxMethod(values);\n\n        onOk && onOk();\n    }\n\n    useEffect(() => {\n        if (isEdit) fetchData();\n    }, []);\n\n    const formProps = {\n        labelWidth: 100,\n    };\n    const modalLoading = loading || saving || updating;\n    return (\n        <ModalContent\n            loading={modalLoading}\n            okText=\"保存\"\n            cancelText=\"重置\"\n            onOk={() => form.submit()}\n            onCancel={() => form.resetFields()}\n        >\n            <Form\n                form={form}\n                onFinish={handleSubmit}\n                initialValues={data}\n            >\n                {isEdit ? <FormElement {...formProps} type=\"hidden\" name=\"id\"/> : null}\n\n                <FormElement\n                    {...formProps}\n                    label=\"用户名\"\n                    name=\"name\"\n                    required\n                    noSpace\n                />\n                <FormElement\n                    {...formProps}\n                    type=\"number\"\n                    label=\"年龄\"\n                    name=\"age\"\n                    required\n                />\n                <FormElement\n                    {...formProps}\n                    type=\"select\"\n                    label=\"工作\"\n                    name=\"job\"\n                    options={[\n                        {value: '1', label: '前端开发'},\n                        {value: '2', label: '后端开发'},\n                    ]}\n                />\n                <FormElement\n                    {...formProps}\n                    type=\"select\"\n                    label=\"职位\"\n                    name=\"position\"\n                    options={[\n                        {value: '1', label: '员工'},\n                        {value: '2', label: 'CEO'},\n                    ]}\n                />\n                <FormElement\n                    {...formProps}\n                    type=\"select\"\n                    mode=\"multiple\"\n                    showSearch\n                    optionFilterProp='children'\n                    label=\"角色\"\n                    name=\"role\"\n                    options={[\n                        {value: '1', label: '员工'},\n                        {value: '2', label: 'CEO'},\n                    ]}\n                />\n            </Form>\n        </ModalContent>\n    );\n});\n\n\n","import React, {useEffect, useState} from 'react';\nimport {Button, Form} from 'antd';\n\nimport PageContent from 'src/layouts/page-content';\nimport config from 'src/commons/config-hoc';\nimport batchDeleteConfirm from 'src/components/batch-delete-confirm';\nimport {useGet, useDel} from 'src/commons/ajax';\nimport api from './useApi';\nimport {\n    FormElement,\n    FormRow,\n    Operator,\n    Pagination,\n    QueryBar,\n    Table,\n} from 'src/library/components';\n\nimport EditModal from './EditModalHooks';\n\nexport default config({\n    path: '/hook/users',\n    title: '用户管理(Hooks)',\n})(() => {\n    // 数据定义\n    const [{condition, pageSize, pageNum}, setCondition] = useState({condition: {}, pageSize: 20, pageNum: 1});\n    const [dataSource, setDataSource] = useState([]);\n    const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n    const [total, setTotal] = useState(0);\n    const [visible, setVisible] = useState(false);\n    const [id, setId] = useState(null);\n    const [form] = Form.useForm();\n\n    // 请求相关定义 只是定义，不会触发请求，调用相关函数，才会触发请求\n    const [loading, fetchUsers] = useGet('/mock/users');\n    const [deleting, deleteUsers] = api.deleteUsers(); // 可以单独封装成api\n    const [deletingOne, deleteUser] = useDel('/mock/users/:id', {successTip: '删除成功！', errorTip: '删除失败！'});\n\n    const columns = [\n        {title: '用户名', dataIndex: 'name', width: 200},\n        {title: '年龄', dataIndex: 'age', width: 200},\n        {title: '工作', dataIndex: 'job', width: 200},\n        {title: '职位', dataIndex: 'position', width: 200},\n        {\n            title: '操作', dataIndex: 'operator', width: 100,\n            render: (value, record) => {\n                const {id, name} = record;\n                const items = [\n                    {\n                        label: '编辑',\n                        onClick: () => setVisible(true) || setId(id),\n                    },\n                    {\n                        label: '删除',\n                        color: 'red',\n                        confirm: {\n                            title: `您确定删除\"${name}\"?`,\n                            onConfirm: () => handleDelete(id),\n                        },\n                    },\n                ];\n\n                return <Operator items={items}/>;\n            },\n        },\n    ];\n\n    // 函数定义\n    async function handleSearch() {\n        if (loading) return;\n        const params = {\n            ...condition,\n            pageNum,\n            pageSize,\n        };\n\n        console.log('params:', params);\n        const res = await fetchUsers(params);\n        console.log('res:', res);\n\n        setDataSource(res?.list || []);\n        setTotal(res?.total || 0);\n    }\n\n    async function handleDelete(id) {\n        if (deletingOne) return;\n\n        await deleteUser(id);\n        await handleSearch();\n    }\n\n    async function handleBatchDelete() {\n        if (deleting) return;\n\n        await batchDeleteConfirm(selectedRowKeys.length);\n\n        await deleteUsers({ids: selectedRowKeys});\n        setSelectedRowKeys([]);\n        await handleSearch();\n    }\n\n    // effect 定义\n    // condition pageNum pageSize 改变触发查询\n    useEffect(() => {\n        handleSearch();\n    }, [\n        condition,\n        pageNum,\n        pageSize,\n    ]);\n\n    // jsx 用到的数据\n    const formProps = {width: 200};\n    const pageLoading = loading || deleting || deletingOne;\n    const disabledDelete = !selectedRowKeys?.length || pageLoading;\n\n    return (\n        <PageContent loading={pageLoading}>\n            <QueryBar>\n                <Form form={form} onFinish={condition => setCondition({condition, pageSize, pageNum: 1})}>\n                    <FormRow>\n                        <FormElement\n                            {...formProps}\n                            label=\"名称\"\n                            name=\"name\"\n                        />\n                        <FormElement\n                            {...formProps}\n                            type=\"select\"\n                            label=\"职位\"\n                            name=\"job\"\n                            options={[\n                                {value: 1, label: 1},\n                                {value: 2, label: 2},\n                            ]}\n                        />\n                        <FormElement layout>\n                            <Button type=\"primary\" htmlType=\"submit\">提交</Button>\n                            <Button onClick={() => form.resetFields()}>重置</Button>\n                            <Button type=\"primary\" onClick={() => setVisible(true) || setId(null)}>添加</Button>\n                            <Button danger disabled={disabledDelete} onClick={handleBatchDelete}>删除</Button>\n                        </FormElement>\n                    </FormRow>\n                </Form>\n            </QueryBar>\n            <Table\n                rowSelection={{\n                    selectedRowKeys,\n                    onChange: setSelectedRowKeys,\n                }}\n                columns={columns}\n                dataSource={dataSource}\n                rowKey=\"id\"\n                serialNumber\n                pageNum={pageNum}\n                pageSize={pageSize}\n            />\n            <Pagination\n                total={total}\n                pageNum={pageNum}\n                pageSize={pageSize}\n                onPageNumChange={pageNum => setCondition({condition, pageSize, pageNum})}\n                onPageSizeChange={pageSize => setCondition({condition, pageSize, pageNum: 1})}\n            />\n            <EditModal\n                visible={visible}\n                id={id}\n                isEdit={id !== null}\n                onOk={() => setVisible(false) || handleSearch()}\n                onCancel={() => setVisible(false)}\n            />\n        </PageContent>\n    );\n});\n"],"sourceRoot":""}
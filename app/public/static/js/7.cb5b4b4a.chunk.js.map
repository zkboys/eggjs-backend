{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../delegated 2887 from dll-reference reactVendor_b6b7128cced73957afbe","components/batch-delete-confirm/index.jsx","pages/chart/EditModal.jsx","pages/chart/index.jsx"],"names":["module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","__webpack_require__","batchDeleteConfirm","count","content","style","padding","color","fontSize","confirm","title","icon","okType","onOk","onCancel","config","modal","props","isEdit","useState","data","setData","id","useForm","form","useGet","loading","fetchChart","usePost","successTip","saving","saveChart","usePut","updating","updateChart","a","res","Object","entries","forEach","setFieldsValue","values","useEffect","fetchData","formProps","labelWidth","modalLoading","okText","cancelText","submit","resetFields","name","onFinish","initialValues","type","label","maxLength","required","path","condition","pageSize","pageNum","setCondition","dataSource","setDataSource","selectedRowKeys","setSelectedRowKeys","total","setTotal","visible","setVisible","setId","fetchCharts","useDel","errorTip","deleting","deleteCharts","deletingOne","deleteChart","columns","dataIndex","width","render","record","items","onClick","onConfirm","handleDelete","handleSearch","params","list","length","ids","pageLoading","disabledDelete","layout","htmlType","danger","disabled","serialNumber","rowSelection","onChange","rowKey","onPageNumChange","onPageSizeChange","EditModal"],"mappings":"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","file":"static/js/7.cb5b4b4a.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","module.exports = (__webpack_require__(6))(2887);","import React from 'react';\nimport {Modal} from 'antd';\nimport {ExclamationCircleOutlined} from '@ant-design/icons';\n\nexport default function batchDeleteConfirm(count) {\n    const content = (\n        <div>\n            您确定删除\n            <span style={{padding: '0 5px', color: 'red', fontSize: 18}}>\n                {count}\n            </span>\n            条记录吗？\n        </div>\n    );\n    return new Promise((resolve, reject) => {\n        Modal.confirm({\n            title: '温馨提示',\n            content,\n            icon: <ExclamationCircleOutlined/>,\n            okType: 'danger',\n            onOk: () => resolve(true),\n            onCancel: () => reject('user cancel confirm'),\n        });\n    });\n}\n","import React, {useState, useEffect} from 'react';\nimport {Form} from 'antd';\nimport {FormElement} from 'src/library/components';\nimport config from 'src/commons/config-hoc';\nimport {ModalContent} from 'src/library/components';\nimport {useGet, usePost, usePut} from 'src/commons/ajax';\n\nexport default config({\n    modal: props => props.isEdit ? '修改' : '添加',\n})(props => {\n    const [data, setData] = useState({});\n    const {isEdit, id, onOk} = props;\n    const [form] = Form.useForm();\n    const [loading, fetchChart] = useGet('/charts/{id}');\n    const [saving, saveChart] = usePost('/charts', {successTip: '添加成功！'});\n    const [updating, updateChart] = usePut('/charts', {successTip: '修改成功！'});\n\n    async function fetchData() {\n        if (loading) return;\n\n        const res = await fetchChart(id);\n\n        // 不处理null，下拉框不显示placeholder\n        Object.entries(res).forEach(([key, value]) => {\n            if (value === null) res[key] = undefined;\n        });\n\n        setData(res || {});\n        form.setFieldsValue(res || {});\n    }\n\n    async function handleSubmit(values) {\n        if (saving || updating) return;\n\n        await (isEdit ? updateChart : saveChart)(values);\n\n        onOk && onOk();\n    }\n\n    useEffect(() => {\n        if (isEdit) fetchData();\n    }, []);\n\n    const formProps = {\n        labelWidth: 100,\n    };\n    const modalLoading = loading || saving || updating;\n    return (\n        <ModalContent\n            loading={modalLoading}\n            okText=\"保存\"\n            cancelText=\"重置\"\n            onOk={() => form.submit()}\n            onCancel={() => form.resetFields()}\n        >\n            <Form\n                name=\"chart-modal-edit\"\n                form={form}\n                onFinish={handleSubmit}\n                initialValues={data}\n            >\n                {isEdit ? <FormElement {...formProps} type=\"hidden\" name=\"id\"/> : null}\n                <FormElement\n                    {...formProps}\n                    label=\"图标标题\"\n                    name=\"title\"\n                    maxLength={50}\n                />\n                <FormElement\n                    {...formProps}\n                    label=\"type\"\n                    name=\"type\"\n                    maxLength={20}\n                />\n                <FormElement\n                    {...formProps}\n                    type=\"textarea\"\n                    label=\"描述\"\n                    name=\"description\"\n                    maxLength={255}\n                />\n                <FormElement\n                    {...formProps}\n                    label=\"消息标识\"\n                    name=\"messageToken\"\n                    required\n                    maxLength={50}\n                />\n                <FormElement\n                    {...formProps}\n                    label=\"纵轴显示标签个数\"\n                    name=\"valueTickCount\"\n                />\n                <FormElement\n                    {...formProps}\n                    label=\"横轴系显示标签个数\"\n                    name=\"labelTickCount\"\n                />\n            </Form>\n        </ModalContent>\n    );\n});\n","import React, {useEffect, useState} from 'react';\nimport {Button, Form, } from 'antd';\n\nimport PageContent from 'src/layouts/page-content';\nimport config from 'src/commons/config-hoc';\nimport {useGet, useDel} from 'src/commons/ajax';\nimport {\n    QueryBar,\n    FormRow,\n    FormElement,\n    Table,\n    Operator,\n    Pagination,\n} from 'src/library/components';\nimport batchDeleteConfirm from 'src/components/batch-delete-confirm';\n\nimport EditModal from './EditModal';\n\nexport default config({\n    path: '/charts',\n})(() => {\n    const [{condition, pageSize, pageNum}, setCondition] = useState({condition: {}, pageSize: 20, pageNum: 1});\n    const [dataSource, setDataSource] = useState([]);\n    const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n    const [total, setTotal] = useState(0);\n    const [visible, setVisible] = useState(false);\n    const [id, setId] = useState(null);\n    const [form] = Form.useForm();\n\n    const [loading, fetchCharts] = useGet('/charts');\n    const [deleting, deleteCharts] = useDel('/charts', {successTip: '删除成功！', errorTip: '删除失败！'});\n    const [deletingOne, deleteChart] = useDel('/charts/{id}', {successTip: '删除成功！', errorTip: '删除失败！'});\n\n    const columns = [\n        {title: '图标标题', dataIndex: 'title', width: 200},\n        {title: 'type', dataIndex: 'type', width: 200},\n        {title: '描述', dataIndex: 'description', width: 200},\n        {title: '消息标识', dataIndex: 'messageToken', width: 200},\n        {title: '纵轴显示标签个数', dataIndex: 'valueTickCount', width: 200},\n        {title: '横轴系显示标签个数', dataIndex: 'labelTickCount', width: 200},\n        {\n            title: '操作', dataIndex: 'operator', width: 100,\n            render: (value, record) => {\n                const {id, name} = record;\n                const items = [\n                    {\n                        label: '修改',\n                        onClick: () => setVisible(true) || setId(id),\n                    },\n                    {\n                        label: '删除',\n                        color: 'red',\n                        confirm: {\n                            title: `您确定删除\"${name}\"?`,\n                            onConfirm: () => handleDelete(id),\n                        },\n                    },\n                    \n                ];\n\n                return <Operator items={items}/>\n            },\n        },\n    ];\n\n    async function handleSearch() {\n        if (loading) return;\n        const params = {\n            ...condition,\n            pageNum,\n            pageSize,\n        };\n\n        const res = await fetchCharts(params);\n\n        setDataSource(res?.list || []);\n        setTotal(res?.total || 0);\n    }\n\n    async function handleDelete(id) {\n        if (deletingOne) return;\n\n        await deleteChart(id);\n        await handleSearch();\n    }\n\n    async function handleBatchDelete() {\n        if (deleting) return;\n\n        await batchDeleteConfirm(selectedRowKeys.length);\n\n        await deleteCharts({ids: selectedRowKeys});\n        setSelectedRowKeys([]);\n        await handleSearch();\n    }\n\n    useEffect(() => {\n        handleSearch();\n    }, [\n        condition,\n        pageNum,\n        pageSize,\n    ]);\n\n    const formProps = {width: 200};\n    const pageLoading = loading || deleting || deletingOne;\n    const disabledDelete = !selectedRowKeys?.length || pageLoading;\n\n    return (\n        <PageContent loading={pageLoading}>\n            <QueryBar>\n                <Form\n                    name=\"chart-query\"\n                    form={form}\n                    onFinish={condition => setCondition({condition, pageSize, pageNum: 1})}\n                >\n                    <FormRow>\n                        <FormElement\n                            {...formProps}\n                            label=\"图标标题\"\n                            name=\"title\"\n                        />\n                            <FormElement\n                            {...formProps}\n                            label=\"type\"\n                            name=\"type\"\n                        />\n                        <FormElement layout>\n                            <Button type=\"primary\" htmlType=\"submit\">提交</Button>\n                            <Button onClick={() => form.resetFields()}>重置</Button>\n                            <Button type=\"primary\" onClick={() => setVisible(true) || setId(null)}>添加</Button>\n                            <Button danger disabled={disabledDelete} onClick={handleBatchDelete}>删除</Button>\n                        </FormElement>\n                    </FormRow>\n                </Form>\n            </QueryBar>\n            <Table\n                serialNumber\n                rowSelection={{\n                    selectedRowKeys,\n                    onChange: setSelectedRowKeys,\n                }}\n                columns={columns}\n                dataSource={dataSource}\n                rowKey=\"id\"\n                pageNum={pageNum}\n                pageSize={pageSize}\n            />\n            <Pagination\n                total={total}\n                pageNum={pageNum}\n                pageSize={pageSize}\n                onPageNumChange={pageNum => setCondition({condition, pageSize, pageNum})}\n                onPageSizeChange={pageSize => setCondition({condition, pageSize, pageNum: 1})}\n            />\n            <EditModal\n                visible={visible}\n                id={id}\n                isEdit={id !== null}\n                onOk={() => setVisible(false) || handleSearch()}\n                onCancel={() => setVisible(false)}\n            />\n        </PageContent>\n    );\n});\n"],"sourceRoot":""}
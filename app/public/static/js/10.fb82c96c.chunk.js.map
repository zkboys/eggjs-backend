{"version":3,"sources":["pages/role/style.less","pages/menu-permission/MenuSelect.jsx","pages/role/EditModal.jsx","pages/role/index.jsx"],"names":["module","exports","index","config","ajax","state","loading","menus","expandedRowKeys","columns","title","dataIndex","key","render","value","record","icon","type","url","this","handleSearch","localMenus","then","orderedData","sort","a","b","aOrder","order","bOrder","text","menuTreeData","convertToTree","map","item","setState","props","onChange","others","expandable","onExpandedRowsChange","rowSelection","selectedRowKeys","dataSource","pagination","Component","EditModal","modal","isEdit","data","fetchData","id","get","res","form","setFieldsValue","finally","handleSubmit","values","successTip","ajaxMethod","put","post","onOk","formProps","labelWidth","okText","cancelText","submit","onCancel","resetFields","ref","onFinish","initialValues","name","label","required","UserCenter","path","deleting","visible","loadingRoleMenu","selectedKeys","selectedRoleId","undefined","width","items","onClick","e","stopPropagation","color","confirm","onConfirm","handleDelete","params","handleRowClick","del","errorTip","roleId","handleSaveRoleMenu","ids","style","paddingLeft","selectedRoleName","find","layout","htmlType","disabled","span","rowClassName","serialNumber","rowKey","onRow"],"mappings":"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","file":"static/js/10.fb82c96c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"root-fIjVT\",\"role-menu-tip\":\"role-menu-tip-2A5Pr\"};","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Icon} from 'src/library/components';\nimport config from 'src/commons/config-hoc';\nimport localMenus from '../../menus';\nimport {convertToTree} from 'src/library/utils/tree-utils';\nimport {Table} from 'src/library/components';\nimport './style.less';\n\n@config({\n    ajax: true,\n})\nexport default class index extends Component {\n    static propTypes = {\n        value: PropTypes.array,     // 选中的节点\n        onChange: PropTypes.func,   // 选择节点时，触发\n    };\n\n    state = {\n        loading: false,\n        menus: [],\n        expandedRowKeys: [],\n    };\n\n    columns = [\n        {\n            title: '名称', dataIndex: 'text', key: 'text',\n            render: (value, record) => {\n                const {icon} = record;\n\n                if (icon) return <span><Icon type={icon}/> {value}</span>;\n\n                return value;\n            },\n        },\n        {\n            title: '类型', dataIndex: 'type', key: 'type',\n            render: (value, record) => {\n                const {url} = record;\n                if (url) return '站外菜单';\n                if (value === '1') return '站内菜单';\n                if (value === '2') return '功能';\n\n                return '菜单';\n            },\n        },\n    ];\n\n    componentDidMount() {\n        this.handleSearch();\n    }\n\n    handleSearch() {\n        localMenus().then(menus => {\n            // 菜单根据order 排序\n            const orderedData = [...menus].sort((a, b) => {\n                const aOrder = a.order || 0;\n                const bOrder = b.order || 0;\n\n                // 如果order都不存在，根据 text 排序\n                if (!aOrder && !bOrder) {\n                    return a.text > b.text ? 1 : -1;\n                }\n\n                return bOrder - aOrder;\n            });\n\n            const menuTreeData = convertToTree(orderedData);\n\n            // 默认展开全部\n            const expandedRowKeys = menus.map(item => item.key);\n            this.setState({menus: menuTreeData, expandedRowKeys});\n        });\n    }\n\n    render() {\n        const {\n            menus,\n            loading,\n            expandedRowKeys,\n        } = this.state;\n\n        const {value, onChange, ...others} = this.props;\n\n        return (\n            <Table\n                expandable={{\n                    expandedRowKeys: expandedRowKeys,\n                    onExpandedRowsChange: expandedRowKeys => this.setState({expandedRowKeys}),\n                }}\n                rowSelection={{\n                    selectedRowKeys: value,\n                    onChange,\n                }}\n                loading={loading}\n                columns={this.columns}\n                dataSource={menus}\n                pagination={false}\n                {...others}\n            />\n        );\n    }\n}\n\n","import React, {Component} from 'react';\nimport {Form} from 'antd';\nimport {FormElement} from 'src/library/components';\nimport config from 'src/commons/config-hoc';\nimport {ModalContent} from 'src/library/components';\n\n@config({\n    ajax: true,\n    modal: {\n        title: props => props.isEdit ? '修改' : '添加',\n    },\n})\nexport default class EditModal extends Component {\n    state = {\n        loading: false,     // 页面加载loading\n        data: {},           // 回显的角色数据\n    };\n\n    componentDidMount() {\n        const {isEdit} = this.props;\n\n        if (isEdit) {\n            this.fetchData();\n        }\n    }\n\n    fetchData = () => {\n        if (this.state.loading) return;\n\n        const {id} = this.props;\n\n        this.setState({loading: true});\n        this.props.ajax.get(`/mock/roles/${id}`)\n            .then(res => {\n                this.setState({data: res || {}});\n                this.form.setFieldsValue(res);\n            })\n            .finally(() => this.setState({loading: false}));\n    };\n\n    handleSubmit = (values) => {\n        if (this.state.loading) return;\n\n        const {isEdit} = this.props;\n        const successTip = isEdit ? '修改成功！' : '添加成功！';\n        const ajaxMethod = isEdit ? this.props.ajax.put : this.props.ajax.post;\n        const ajaxUrl = isEdit ? '/role' : '/role';\n\n        this.setState({loading: true});\n        ajaxMethod(ajaxUrl, values, {successTip})\n            .then(() => {\n                const {onOk} = this.props;\n                onOk && onOk();\n            })\n            .finally(() => this.setState({loading: false}));\n    };\n\n    render() {\n        const {isEdit} = this.props;\n        const {loading, data} = this.state;\n        const formProps = {\n            labelWidth: 100,\n        };\n        return (\n            <ModalContent\n                loading={loading}\n                okText=\"保存\"\n                cancelText=\"重置\"\n                onOk={() => this.form.submit()}\n                onCancel={() => this.form.resetFields()}\n            >\n                <Form\n                    ref={form => this.form = form}\n                    onFinish={this.handleSubmit}\n                    initialValues={data}\n                >\n                    {isEdit ? <FormElement {...formProps} type=\"hidden\" name=\"id\"/> : null}\n                    <FormElement\n                        {...formProps}\n                        label=\"角色名称\"\n                        name=\"name\"\n                        required\n                    />\n                    <FormElement\n                        {...formProps}\n                        label=\"描述\"\n                        name=\"description\"\n                    />\n                </Form>\n            </ModalContent>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {Button, Form, Row, Col} from 'antd';\nimport PageContent from 'src/layouts/page-content';\nimport config from 'src/commons/config-hoc';\nimport MenuSelect from 'src/pages/menu-permission/MenuSelect';\nimport {\n    QueryBar,\n    FormRow,\n    FormElement,\n    Table,\n    Operator,\n} from 'src/library/components';\nimport EditModal from './EditModal';\nimport './style.less';\n\n@config({\n    path: '/roles',\n    ajax: true,\n})\nexport default class UserCenter extends Component {\n    state = {\n        loading: false,     // 表格加载数据loading\n        dataSource: [],     // 表格数据\n        deleting: false,    // 删除中loading\n        visible: false,     // 添加、修改弹框\n        id: null,           // 需要修改的数据id\n        loadingRoleMenu: false, // 查询角色权限 loading标识\n        selectedKeys: [],   // 角色对应的菜单\n        selectedRoleId: undefined, // 当前选中角色\n    };\n\n    columns = [\n        {title: '角色名称', dataIndex: 'name', width: 150},\n        {title: '描述', dataIndex: 'description'},\n        {\n            title: '操作', dataIndex: 'operator', width: 100,\n            render: (value, record) => {\n                const {id, name} = record;\n                const items = [\n                    {\n                        label: '修改',\n                        onClick: (e) => {\n                            e.stopPropagation();\n                            this.setState({visible: true, id});\n                        },\n                    },\n                    {\n                        label: '删除',\n                        color: 'red',\n                        confirm: {\n                            title: `您确定删除\"${name}\"?`,\n                            onConfirm: (e) => {\n                                e.stopPropagation();\n                                this.handleDelete(id);\n                            },\n                        },\n                    },\n                ];\n\n                return <Operator items={items}/>;\n            },\n        },\n    ];\n\n    componentDidMount() {\n        this.handleSubmit();\n    }\n\n    handleSubmit = (values) => {\n        if (this.state.loading) return;\n        const params = {\n            ...values,\n        };\n\n        // 一般系统中，角色不会太多，不做分页查询了\n        this.setState({loading: true});\n        this.props.ajax.get('/mock/role', params)\n            .then(res => {\n                const dataSource = res || [];\n\n                this.setState({dataSource});\n\n                // 查询之后，默认选中第一个角色\n                if (dataSource[0]) this.handleRowClick(dataSource[0]);\n            })\n            .finally(() => this.setState({loading: false}));\n    };\n\n    handleDelete = (id) => {\n        if (this.state.deleting) return;\n\n        this.setState({deleting: true});\n        this.props.ajax.del(`/mock/roles/${id}`, null, {successTip: '删除成功！', errorTip: '删除失败！'})\n            .then(() => this.form.submit())\n            .finally(() => this.setState({deleting: false}));\n    };\n\n    handleRowClick = (record) => {\n        const {id} = record;\n        this.setState({selectedRoleId: id, selectedKeys: []});\n        // 根据id 获取 role对应的菜单权限\n        const params = {roleId: id};\n        this.setState({loadingRoleMenu: true});\n        this.props.ajax.get('/mock/roles/menus', params)\n            .then(res => {\n                this.setState({selectedKeys: res});\n            })\n            .finally(() => this.setState({loadingRoleMenu: false}));\n    };\n\n    handleSaveRoleMenu = () => {\n        const {selectedKeys} = this.state;\n\n        const params = {ids: selectedKeys};\n        this.setState({loading: true});\n        this.props.ajax.post('/mock/roles/menus', params, {successTip: '保存角色权限成功！'})\n            .then(res => {\n\n            })\n            .finally(() => this.setState({loading: false}));\n    };\n\n    render() {\n        const {\n            loading,\n            dataSource,\n            visible,\n            id,\n            selectedRoleId,\n            selectedKeys,\n            loadingRoleMenu,\n        } = this.state;\n\n        const {form} = this.props;\n        const formProps = {\n            form,\n            width: 220,\n            style: {paddingLeft: 16},\n        };\n\n        const selectedRoleName = dataSource.find(item => item.id === selectedRoleId)?.name;\n\n        return (\n            <PageContent styleName=\"root\" loading={loading || loadingRoleMenu}>\n                <QueryBar>\n                    <Form onFinish={this.handleSubmit} ref={form => this.form = form}>\n                        <FormRow>\n                            <FormElement\n                                {...formProps}\n                                label=\"角色名\"\n                                name=\"name\"\n                            />\n                            <FormElement layout>\n                                <Button type=\"primary\" htmlType=\"submit\">查询</Button>\n                                <Button onClick={() => this.form.resetFields()}>重置</Button>\n                                <Button type=\"primary\" onClick={() => this.setState({visible: true, id: null})}>添加</Button>\n                            </FormElement>\n                            <div styleName=\"role-menu-tip\">\n                                {selectedRoleName ? <span>当前角色权限：「{selectedRoleName}」</span> : <span>请在左侧列表中选择一个角色！</span>}\n                                <Button disabled={!selectedRoleName} type=\"primary\" onClick={this.handleSaveRoleMenu}>保存权限</Button>\n                            </div>\n                        </FormRow>\n                    </Form>\n                </QueryBar>\n                <Row>\n                    <Col span={14}>\n                        <Table\n                            rowClassName={record => {\n                                if (record.id === selectedRoleId) return 'role-table selected';\n\n                                return 'role-table';\n                            }}\n                            serialNumber\n                            columns={this.columns}\n                            dataSource={dataSource}\n                            rowKey=\"id\"\n                            onRow={(record, index) => {\n                                return {\n                                    onClick: () => this.handleRowClick(record, index),\n                                };\n                            }}\n                        />\n                    </Col>\n                    <Col span={10}>\n                        <MenuSelect\n                            value={selectedKeys}\n                            onChange={selectedKeys => this.setState({selectedKeys})}\n                        />\n                    </Col>\n                </Row>\n                <EditModal\n                    visible={visible}\n                    id={id}\n                    isEdit={id !== null}\n                    onOk={() => this.setState({visible: false}, this.form.submit)}\n                    onCancel={() => this.setState({visible: false})}\n                />\n            </PageContent>\n        );\n    }\n}\n"],"sourceRoot":""}